{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTransformRef = void 0;\nvar assignRef_1 = require(\"./assignRef\");\nvar useRef_1 = require(\"./useRef\");\n/**\n * Create a _lense_ on Ref, making it possible to transform ref value\n * @param {ReactRef} ref\n * @param {Function} transformer. ðŸ‘‰ Ref would be __NOT updated__ on `transformer` update.\n * @returns {RefObject}\n *\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\n * @example\n *\n * const ResizableWithRef = forwardRef((props, ref) =>\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\n * );\n */\nfunction useTransformRef(ref, transformer) {\n  return (0, useRef_1.useCallbackRef)(null, function (value) {\n    return (0, assignRef_1.assignRef)(ref, transformer(value));\n  });\n}\nexports.useTransformRef = useTransformRef;","map":{"version":3,"names":["Object","defineProperty","exports","value","useTransformRef","assignRef_1","require","useRef_1","ref","transformer","useCallbackRef","assignRef"],"sources":["/home/shawen/Code/faq-accordion/accordion/node_modules/use-callback-ref/dist/es5/useTransformRef.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTransformRef = void 0;\nvar assignRef_1 = require(\"./assignRef\");\nvar useRef_1 = require(\"./useRef\");\n/**\n * Create a _lense_ on Ref, making it possible to transform ref value\n * @param {ReactRef} ref\n * @param {Function} transformer. ðŸ‘‰ Ref would be __NOT updated__ on `transformer` update.\n * @returns {RefObject}\n *\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\n * @example\n *\n * const ResizableWithRef = forwardRef((props, ref) =>\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\n * );\n */\nfunction useTransformRef(ref, transformer) {\n    return (0, useRef_1.useCallbackRef)(null, function (value) { return (0, assignRef_1.assignRef)(ref, transformer(value)); });\n}\nexports.useTransformRef = useTransformRef;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,eAAeA,CAACI,GAAG,EAAEC,WAAW,EAAE;EACvC,OAAO,CAAC,CAAC,EAAEF,QAAQ,CAACG,cAAc,EAAE,IAAI,EAAE,UAAUP,KAAK,EAAE;IAAE,OAAO,CAAC,CAAC,EAAEE,WAAW,CAACM,SAAS,EAAEH,GAAG,EAAEC,WAAW,CAACN,KAAK,CAAC,CAAC;EAAE,CAAC,CAAC;AAC/H;AACAD,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}